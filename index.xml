<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Datalog.so</title><link>https://example.com/</link><description>Recent content on Datalog.so</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © 2020, Jane Doe.</copyright><lastBuildDate>Fri, 03 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Markdown Syntax Guide</title><link>https://example.com/markdown-syntax-guide/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://example.com/markdown-syntax-guide/</guid><description>&lt;p>For a quick cheatsheet, check out &lt;a href="https://simplemde.com/markdown-guide">https://simplemde.com/markdown-guide&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Time traveling in data lakes</title><link>https://example.com/time-traveling-in-data-lakes/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>https://example.com/time-traveling-in-data-lakes/</guid><description>Some text about data lakes idk</description></item><item><title>About</title><link>https://example.com/about/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://example.com/about/</guid><description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
https://github.</description></item><item><title>Newsletter</title><link>https://example.com/newsletter/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://example.com/newsletter/</guid><description>19 Jul 2021Row Access Policies Are Now Generally Available on Snowflake19 Jul 2021Snowflake Helps ECAL Gain Rich Customer Behavioral Insights19 Jul 2021Digging Out Data with Adobe PDF Extract API16 Jul 2021Register/Map Custom AEM I/O Events16 Jul 2021Adobe I/O-Powered AEMaaCS Assets Export Implemented in Real-Time or Batch Mode16 Jul 2021Query an Apache Hudi dataset in an Amazon S3 data lake with Amazon Athena part 1: Read-optimized queries16 Jul 2021Analyzing Customer Issues to Improve User Experience16 Jul 2021Cómo protegemos las contraseñas de los usuarios16 Jul 2021How Jobcase is using Amazon Redshift ML to recommend job search content at scale15 Jul 2021Query Snowflake using Athena Federated Query and join with data in your Amazon S3 data lake15 Jul 2021Unified Flink Source at Pinterest: Streaming Data Processing15 Jul 2021Schema Detection Public Preview15 Jul 2021Data Engineering Use Cases with Snowpark and Java UDFs15 Jul 2021Fully Sharded Data Parallel: faster AI training with fewer GPUs15 Jul 2021Data Engineers of Netflix — Interview with Kevin Wylie15 Jul 2021A Reference Architecture for the Cloudera Private Cloud Base Data Platform14 Jul 2021Build a serverless event-driven workflow with AWS Glue and Amazon EventBridge14 Jul 2021OAG: Using the Cloud for Sunnier Days in the Travel Industry14 Jul 2021How WhatsApp enables multi-device capability14 Jul 2021Why CFOs Should Champion the Consumption Business Model14 Jul 2021Auto scaling Amazon Kinesis Data Streams using Amazon CloudWatch and AWS Lambda14 Jul 2021Customer Support Automation Platform at Uber14 Jul 2021Data preparation using an Amazon RDS for MySQL database with AWS Glue DataBrew13 Jul 2021How Disney Streaming Uses the Data Cloud for Data Governance and Data Sharing13 Jul 2021Delivering Modern Enterprise Data Engineering with Cloudera Data Engineering on Azure13 Jul 2021Incremental data matching using AWS Lake Formation and AWS Glue13 Jul 2021Query your Oracle database using Athena Federated Query and join with data in your Amazon S3 data lake13 Jul 2021Advertiser Recommendation Systems at Pinterest13 Jul 2021How Airbnb Measures Future Value to Standardize Tradeoffs13 Jul 2021A CDO’s Field Guide to Finding Value in Data13 Jul 2021Enable federation to multiple Amazon QuickSight accounts with Microsoft Azure Active Directory13 Jul 2021Listening and Handling Copy/Paste Events in Adobe Experience Manager13 Jul 2021Managing Focus Transitions in Slack12 Jul 2021Create a secure data lake by masking, encrypting data, and enabling fine-grained access with AWS Lake Formation12 Jul 2021Register Now for Snowflake’s Retail and CPG Data Analytics Forum12 Jul 2021Enforcing encryption at scale12 Jul 2021Interactive Querying with Apache Spark SQL at Pinterest12 Jul 2021This week in #Scala (Jul 12, 2021)12 Jul 2021Accelerate big data analytics with the Spark 3.</description></item><item><title>Bear</title><link>https://example.com/bear/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/bear/</guid><description>Bear Website: https://bearblog.dev
There is a website obesity crisis. Bloated websites are full of scripts, ads, and trackers slowing your readers down every time they try to read your well-crafted content.
Bear is all you need to build a fantastic and optimized site or blog. It works perfectly on any viewing device. All you need to focus on is writing good content.
Bear makes it simple to publish content online and grow an audience while keeping pages tiny, fast, and optimized for search engines.</description></item><item><title>Hugo</title><link>https://example.com/hugo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/hugo/</guid><description>Hugo Website: https://gohugo.io
Written in Go, Hugo is an open-source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML, and JSON data file types, Markdown and HTML content files, and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification, and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:</description></item></channel></rss>